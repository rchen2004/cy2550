#!/usr/bin/env python3 

 import sys, random 

 from random import randrange 

  

 words = 4 

 caps = 0 

 numbers = 0 

 symbols = 0 

  

 pw_list = [] 

  

 for i, arg in enumerate(sys.argv): 

     if (arg == "-h") or (arg == "--help"): 

         print("usage: xkcdpwgen [-h] [-w WORDS] [-c CAPS] [-n NUMBERS] [-s SYMBOLS]\n\n" + 

               "Generate a secure, memorable password using the XKCD method\n\n" + 

               "optional arguments:\n" + 

               "-h, --help            show this help message and exit\n" + 

               "-w WORDS, --words WORDS\n" + 

               "                      include WORDS words in the password (default=4)\n" + 

               "-c CAPS, --caps       CAPS  capitalize the first letter of CAPS random words\n" + 

               "                      (default=0)\n" + 

               "-n NUMBERS, --numbers NUMBERS\n" + 

               "                      insert NUMBERS random numbers in the password\n" + 

               "                      (default=0)\n" + 

               "-s SYMBOLS, --symbols SYMBOLS\n" + 

               "                      insert SYMBOLS random symbols in the password\n" + 

               "                      (default=0)") 

     elif (arg == "-w") or (arg == "--words"): 

         try: 

             words = sys.argv[i + 1] 

             if not words.isdigit(): 

                 raise Exception() 

         except: 

             sys.exit("Please provide a valid argument after -w") 

     elif (arg == "-c") or (arg == "--caps"): 

         try: 

             caps = sys.argv[i + 1] 

             if not caps.isdigit(): 

                 raise Exception() 

             if int(caps) > int(words): 

                 raise Exception() 

         except: 

             sys.exit("Please provide a valid argument after -c") 

     elif (arg == "-n") or (arg == "--numbers"): 

         try: 

             numbers = sys.argv[i + 1] 

             if not numbers.isdigit(): 

                 raise Exception() 

         except: 

             sys.exit("Please provide a valid argument after -n") 

     elif (arg == "-s") or (arg == "--symbols"): 

         try: 

             symbols = sys.argv[i + 1] 

             if not symbols.isdigit(): 

                 raise Exception() 

         except: 

             sys.exit("Please provide a valid argument after -s") 

  

  

 def random_word(): 

     file = open('words.txt') 

     content = file.readlines() 

     return content[random.randint(0, len(content))].rstrip() 

  

  

 for n in range(int(words)): 

     pw_list.append(random_word()) 

  

 caps_list = random.sample(range(int(words)), int(caps)) 

  

 for n in caps_list: 

     pw_list[n] = pw_list[n].capitalize() 

  

 nums_list = random.sample(range(int(words)*2), int(numbers)) 

  

 for n in nums_list: 

     if n < int(words): 

         pw_list[n] = str(randrange(10)) + pw_list[n] 

     else: 

         pw_list[n - int(words)] = pw_list[n - int(words)] + str(randrange(10)) 

  

 symb_list = random.sample(range(int(words)*2), int(symbols)) 

  

 symb = ["~", "!", "@", "#", "$", "%", "^", "&", "*", ".", ":", ";"] 

  

 for n in symb_list: 

     if n < int(words): 

         pw_list[n] = symb[randrange(12)] + pw_list[n] 

     else: 

         pw_list[n - int(words)] = pw_list[n - int(words)] + symb[randrange(12)] 

  

  

 #print("Password: ", pw_list, caps_list, nums_list, symb_list) 

  

 final = "" 

  

 for n in pw_list: 

     final += n 

  

 print(final)
