#!/usr/bin/env python3

import sys
import random

words = 4
caps = 0
numbers = 0
symbols = 0
word_list = []

for i, arg in enumerate(sys.argv):
    if (arg == "-h") or (arg == "--help"):
        print("usage: xkcdpwgen [-h] [-w WORDS] [-c CAPS] [-n NUMBERS] [-s SYMBOLS]\n\n" +
              "Generate a secure, memorable password using the XKCD method\n\n" +
              "optional arguments:\n" +
              "-h, --help            show this help message and exit\n" +
              "-w WORDS, --words WORDS\n" +
              "                      include WORDS words in the password (default=4)\n" +
              "-c CAPS, --caps       CAPS  capitalize the first letter of CAPS random words\n" +
              "                      (default=0)\n" +
              "-n NUMBERS, --numbers NUMBERS\n" +
              "                      insert NUMBERS random numbers in the password\n" +
              "                      (default=0)\n" +
              "-s SYMBOLS, --symbols SYMBOLS\n" +
              "                      insert SYMBOLS random symbols in the password\n" +
              "                      (default=0)")
    elif (arg == "-w") or (arg == "--words"):
        try:
            words = int(sys.argv[i + 1])
            if words <= 0:
                raise Exception()
        except:
            sys.exit("Please provide a valid argument after -w")
    elif (arg == "-c") or (arg == "--caps"):
        try:
            caps = int(sys.argv[i + 1])
            if caps < 0:
                raise Exception()
            if caps > words:
                raise Exception()
        except:
            sys.exit("Please provide a valid argument after -c")
    elif (arg == "-n") or (arg == "--numbers"):
        try:
            numbers = int(sys.argv[i + 1])
            if numbers < 0:
                raise Exception()
        except:
            sys.exit("Please provide a valid argument after -n")
    elif (arg == "-s") or (arg == "--symbols"):
        try:
            symbols = int(sys.argv[i + 1])
            if symbols < 0:
                raise Exception()
        except:
            sys.exit("Please provide a valid argument after -s")


def random_word():
    with open('words.txt') as f:
        word_list = f.readlines()
    return random.choice(word_list).strip()


for n in range(words):
    word_list.append(random_word())

capitals = random.sample(range(words), caps)

for n in capitals:
    word_list[n] = word_list[n].capitalize()

nums_list = random.sample(range(words * 2), numbers)

for n in nums_list:
    if n < words:
        word_list[n] = str(random.randrange(10)) + word_list[n]
    else:
        word_list[n - words] = word_list[n - words] + str(random.randrange(10))

symbol = random.sample(range(words * 2), symbols)

symb = ["~", "!", "@", "#", "$", "%", "^", "&", "*", ".", ":", ";"]

for n in symbol:
    if n < words:
        word_list[n] = symb[random.randrange(12)] + word_list[n]
    else:
        word_list[n - words] = word_list[n - words] + symb[random.randrange(12)]

final = "".join(word_list)

print(final)
